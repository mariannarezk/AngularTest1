// <auto-generated />
using System;
using AngularTest1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AngularTest1.Migrations
{
    [DbContext(typeof(AngularTest1Context))]
    [Migration("20201005141000_m2")]
    partial class m2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AngularTest1.Models.Menu", b =>
                {
                    b.Property<int>("Menu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Menu_Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menu_Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Menu_Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("AngularTest1.Models.Page", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("AngularTest1.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DistanceInMeters")
                        .HasColumnType("int");

                    b.Property<long>("TimeInSeconds")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("SeniorProject16.Models.Categories", b =>
                {
                    b.Property<int>("CategId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CategVisible")
                        .HasColumnType("bit");

                    b.HasKey("CategId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SeniorProject16.Models.IngPackageQuantity", b =>
                {
                    b.Property<int>("PackageIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("IngPackageQuantity1")
                        .HasColumnType("float");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.HasKey("PackageIngredientId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PackageId");

                    b.ToTable("IngPackageQuantities");
                });

            modelBuilder.Entity("SeniorProject16.Models.IngrItemQuantity", b =>
                {
                    b.Property<int>("IngredientItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("IQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("IngQuantity")
                        .HasColumnType("float");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Unite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientItemId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ItemId");

                    b.ToTable("IngrItemQuantities");
                });

            modelBuilder.Entity("SeniorProject16.Models.Ingredients", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("IngredientCalories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IngredientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IngredientQty")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_Id1")
                        .HasColumnType("int");

                    b.HasKey("IngredientId");

                    b.HasIndex("Menu_Id1");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("SeniorProject16.Models.Items", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategId")
                        .HasColumnType("int");

                    b.Property<string>("ItemCalories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDiscount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemEnable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_Id1")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("CategId");

                    b.HasIndex("Menu_Id1");

                    b.HasIndex("SectionId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SeniorProject16.Models.MenuCategorie", b =>
                {
                    b.Property<int>("MenuCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CategEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("CategId")
                        .HasColumnType("int");

                    b.Property<int>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_Id1")
                        .HasColumnType("int");

                    b.HasKey("MenuCategoryId");

                    b.HasIndex("CategId");

                    b.HasIndex("Menu_Id1");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("SeniorProject16.Models.PackageItem", b =>
                {
                    b.Property<int>("ItemPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<bool?>("ItemIsReplaced")
                        .HasColumnType("bit");

                    b.Property<double?>("ItemQtyId")
                        .HasColumnType("float");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("ReplacedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemPackageId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageItems");
                });

            modelBuilder.Entity("SeniorProject16.Models.Packages", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategId")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_Id1")
                        .HasColumnType("int");

                    b.Property<double?>("PackageDiscount")
                        .HasColumnType("float");

                    b.Property<bool?>("PackageEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PackageOffer")
                        .HasColumnType("bit");

                    b.Property<double?>("PackagePrice")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("PackageId");

                    b.HasIndex("CategId");

                    b.HasIndex("Menu_Id1");

                    b.HasIndex("SectionId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("SeniorProject16.Models.Sections", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Menu_Id1")
                        .HasColumnType("int");

                    b.Property<bool?>("SectionAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionId");

                    b.HasIndex("Menu_Id1");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SeniorProject16.Models.IngPackageQuantity", b =>
                {
                    b.HasOne("SeniorProject16.Models.Ingredients", "Ingredient")
                        .WithMany("IngPackageQuantity")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeniorProject16.Models.Packages", "Package")
                        .WithMany("IngPackageQuantity")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SeniorProject16.Models.IngrItemQuantity", b =>
                {
                    b.HasOne("SeniorProject16.Models.Ingredients", "Ingredient")
                        .WithMany("IngrItemQuantity")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeniorProject16.Models.Items", "Item")
                        .WithMany("IngrItemQuantity")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SeniorProject16.Models.Ingredients", b =>
                {
                    b.HasOne("AngularTest1.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("Menu_Id1");
                });

            modelBuilder.Entity("SeniorProject16.Models.Items", b =>
                {
                    b.HasOne("SeniorProject16.Models.Categories", "Categ")
                        .WithMany("Items")
                        .HasForeignKey("CategId");

                    b.HasOne("AngularTest1.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("Menu_Id1");

                    b.HasOne("SeniorProject16.Models.Sections", "Section")
                        .WithMany("Items")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("SeniorProject16.Models.MenuCategorie", b =>
                {
                    b.HasOne("SeniorProject16.Models.Categories", "Categ")
                        .WithMany("MenuCategorie")
                        .HasForeignKey("CategId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AngularTest1.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("Menu_Id1");
                });

            modelBuilder.Entity("SeniorProject16.Models.PackageItem", b =>
                {
                    b.HasOne("SeniorProject16.Models.Items", "Item")
                        .WithMany("PackageItem")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeniorProject16.Models.Packages", "Package")
                        .WithMany("PackageItem")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SeniorProject16.Models.Packages", b =>
                {
                    b.HasOne("SeniorProject16.Models.Categories", "Categ")
                        .WithMany("Packages")
                        .HasForeignKey("CategId");

                    b.HasOne("AngularTest1.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("Menu_Id1");

                    b.HasOne("SeniorProject16.Models.Sections", "Section")
                        .WithMany("Packages")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("SeniorProject16.Models.Sections", b =>
                {
                    b.HasOne("AngularTest1.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("Menu_Id1");
                });
#pragma warning restore 612, 618
        }
    }
}
